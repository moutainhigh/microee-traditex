
info:
  name: microee-traditex-inbox-app
  version: 1.0
  pubtime: 1601547280482

tomcat:
  apr: true
    
redis:
  database: 0
  timeout: 1000
  port: 6379
  host: redis_single
  pool:
    max-active: 100
    max-idle: 20
    min-idle: 5
    max-wait: 1000


kafka:
  bootstrap-servers: kafka_2.6.0:9093
  consumer:
    group-id: microee-traditex-inbox-app
    auto-offset-reset: earliest
    key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    value-deserializer: org.apache.kafka.common.serialization.StringDeserializer


# kafka topics
topics:
  inbox:
    orderbook: inbox_hbitex_orderbook_message_topic_${spring.profiles.active}
    pricing: inbox_pricing_stream_topic_${spring.profiles.active}
    connected: inbox_connected_event_topic_${spring.profiles.active}
    banalce: inbox_balance_topic_${spring.profiles.active}
    orderstat: inbox_orderstat_topic_${spring.profiles.active}
    authevent: inbox_authevent_topic_${spring.profiles.active}
    subscribe.event: inbox_subscribe_event_topic_${spring.profiles.active}
    connect.shutdown.event: inbox_connect_shutdown_event_topic_${spring.profiles.active}

# redis topics
topic:
  traditex:
    pricing.message: __traditex.message.pricing_${spring.profiles.active}
    orderbook.message: __traditex.message.orderbook_${spring.profiles.active}
    diskorders.message: __traditex.message.diskorders_${spring.profiles.active}
    revokeorder.count.message: __traditex.message.revokeorder.count_${spring.profiles.active}
    account.balance.message: __traditex.message.account.balance_${spring.profiles.active}
    httpnetwork.message: __traditex.message.httpnetwork_${spring.profiles.active}
    httplog.listener.message: __traditex.message.httplog.listener_${spring.profiles.active}

      





    